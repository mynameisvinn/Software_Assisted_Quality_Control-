% script returns area (in pixels) for the largest object in image

%% Step 1: read image into memory
% user provides data ID
data_id = 7112;

% connect to limsdb and retreive file path
conn = database('limsdb','lims','mou53Brains!');
curs = exec(conn,[]);
sql = ['SELECT primary_file_system_location_lossy FROM data_file WHERE id = "' num2str(data_id) '"'];
curs = exec(conn,sql);
curs = fetch(curs);
imagefilename = curs.Data;

% create image file path
path = strcat('Z:\Converted Image Data\', imagefilename);

% load image
image_raw = imread(char(path));

%% Step 2: extract boundary

tic
% visual inspection
image_converted = uint8(image_raw);

% convert image to binary
image_bw = im2bw(image_converted, graythresh(image_converted));

% denoise noise and fill in largest tissue
se = strel('rectangle',[40 40]);
image_bw_1 = imerode(image_bw,se);
image_bw_2 = imdilate(image_bw_1,se);

% use a larger disk to smooth boundaries
se = strel('disk',[100]);
image_bw_3 = imdilate(image_bw_2,se);
image_bw_4 = imdilate(image_bw_3,se);

% fill in holes, if any
image_bw_5 = imfill(image_bw_4, 'holes');
toc

%% Step 3: inspect quality of mask

% recast to 8 bit for masking purposes
image_bw_6 = uint8(image_bw_5);

% crop image according to mask
image_mask = image_converted .* repmat(image_bw_6,[1,1,3]);

% inspect mask
imshow(image_mask)

%% Step 4: calculate areas of object

image_properties = regionprops(image_bw_5, 'Area');

% find largest object and return object area 
[~,ind] = max([image_properties.Area]);
image_properties(ind).Area