% function returns area (in pixels) for the largest object in image

% user provides data ID
data_id = 7112;

% connect to limsdb and retreive file path
conn = database('limsdb','lims','mou53Brains!');
curs = exec(conn,[]);
sql = ['SELECT primary_file_system_location_lossy FROM data_file WHERE id = "' num2str(data_id) '"'];
curs = exec(conn,sql);
curs = fetch(curs);
imagefilename = curs.Data;

% create image file path
path = strcat('Z:\Converted Image Data\', imagefilename);

% load image
im0 = imread(char(path));

%%

tic
% recast to 8 bit for visual inspection
im1 = uint8(im0);

% convert image to binary
bw = im2bw(im1, graythresh(im1));

% denoise noise and fill in largest tissue
se = strel('rectangle',[40 40]);
bw_1 = imerode(bw,se);
bw_2 = imdilate(bw_1,se);

% use a larger disk to smooth boundaries
se = strel('disk',[100]);
bw_3 = imdilate(bw_2,se);
bw_4 = imdilate(bw_3,se);

% fill in holes, if any
bw_5 = imfill(bw_4, 'holes');
toc

%% Step 3: inspect quality of mask

% recast to 8 bit for masking purposes
bw_6 = uint8(bw_5);

% crop image according to mask
cropped = im1 .* repmat(bw_6,[1,1,3]);

% inspect mask
imshow(cropped)

%% Step 4: calculate areas of object

s = regionprops(bw_5, 'Area');

% find largest object and return object area 
[~,ind] = max([s.Area]);
s(ind).Area